{"version":3,"sources":["./src/environments/environment.ts","./src/app/StrategicData.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IAC1B,UAAU,EAAE,KAAK;CACjB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACLnE;AAAA;AAAA;AAAA;AAAA,IAAY,SAEX;AAFD,WAAY,SAAS;IACpB,4BAAe;AAChB,CAAC,EAFW,SAAS,KAAT,SAAS,QAEpB;AAED,IAAY,QAEX;AAFD,WAAY,QAAQ;IACnB,iCAAqB;AACtB,CAAC,EAFW,QAAQ,KAAR,QAAQ,QAEnB;AAEM,MAAM,aAAa;CAQzB;;;;;;;;;;;;;;;;;;;;;;AC1ByC;AAEM;;;;;;;;ICuB5C,yEACC;IAAA,wEACC;IAAA,4EAED;IAFgD,8RAA4B;IAA3E,4DAED;IAAA,4DAAK;IACL,qEACC;IAAA,4EACD;IADqC,iSAA+B;IAAnE,4DACD;IAAA,4DAAK;IACL,qEACC;IAAA,4EACD;IADuC,8RAA4B;IAAlE,4DACD;IAAA,4DAAK;IACL,qEACC;IAAA,4EACD;IADsC,6RAA2B;IAAhE,4DACD;IAAA,4DAAK;IACL,qEACC;IAAA,6EAGD;IADE,0SAAoD;;IAFrD,4DAGD;IAAA,4DAAK;IACL,sEACC;IAAA,6EAED;IADE,6RAAuC;;IADxC,4DAED;IAAA,4DAAK;IACN,4DAAK;;;IAvBwC,+JAAsD;IAGlE,0DAA2B;IAA3B,yGAA2B;IADX,sFAA4B;IAIvC,0DAA+B;IAA/B,yFAA+B;IAG7B,0DAA4B;IAA5B,sFAA4B;IAG7B,0DAA2B;IAA3B,qFAA2B;IAI/D,0DAAqD;IAArD,0KAAqD;IAIR,0DAAyC;IAAzC,gKAAyC;;ADpCtF,MAAM,YAAY;IALzB;QAMC,UAAK,GAAG,eAAe,CAAC;KAmExB;IA5DM,gBAAgB;;YACrB,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,4EAA4E,CAAC,CAAC;YACvG,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;YAEnC,IAAI,CAAC,IAAI,GAAI,QAA6B;iBACxC,GAAG,CAAC,CAAC,CAAC,EAAE;gBACR,CAAC,CAAC,oBAAoB,GAAG,CAAC,CAAC,oBAAoB,GAAG,GAAG,CAAC;gBAEtD,OAAO,CAAC,CAAC;YACV,CAAC,CAAC,CAAC;YAEJ,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAE1B,OAAO,IAAI,CAAC,IAAI,CAAC;QAClB,CAAC;KAAA;IAED,QAAQ;QACP,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACzB,CAAC;IAED,gBAAgB;QACf,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE/F,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,KAAK,IAAI,CAAC,aAAa,CAAC;QAEpE,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC3B,CAAC;IAED,mBAAmB;QAClB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IACvC,CAAC;IAED,kBAAkB;QACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,UAAU;QACT,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;QAChD,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC3B,CAAC;IAED,SAAS;QACR,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QAEzD,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACzB,CAAC;IAED,OAAO;QACN,MAAM,MAAM,GAAG,IAAI,4DAAa,EAAE,CAAC;QAEnC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;QACnB,MAAM,CAAC,oBAAoB,GAAG,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC;;wEAnEW,YAAY;4FAAZ,YAAY;QCTzB,yEACC;QAAA,yEACC;QAAA,wEACC;QAAA,wEACC;QAAA,wEACC;QAAA,2EACD;QADwB,mIAAS,eAAW,IAAC;QAA5C,4DACD;QAAA,4DAAK;QACL,wEACC;QAAA,sEAAK;QAAA,mEAAQ;QAAA,4DAAM;QACpB,4DAAK;QACL,wEACC;QAAA,uEAAK;QAAA,sEAAU;QAAA,4DAAM;QACtB,4DAAK;QACL,yEACC;QAAA,uEAAK;QAAA,qEAAS;QAAA,4DAAM;QACrB,4DAAK;QACL,yEACC;QAAA,0EAAwB;QAAA,+DAAG;QAAA,4DAAM;QACjC,0EAAwB;QAAA,iEAAK;QAAA,4DAAM;QACpC,4DAAK;QACL,yEACC;QAAA,0EAAwB;QAAA,mEAAO;QAAA,4DAAM;QACtC,4DAAK;QACN,4DAAQ;QACR,yEACC;QAAA,2GACC;QAuBD,sEACC;QAAA,0EACC;QAAA,8EAAgE;QAAxD,qIAAS,aAAS,IAAC;QAAqC,oEAAQ;QAAA,4DAAS;QACjF,8EAAmE;QAA3D,qIAAS,gBAAY,IAAC;QAAqC,uEAAW;QAAA,4DAAS;QACxF,4DAAK;QACN,4DAAK;QACN,4DAAQ;QACR,6EACC;QAAA,0EACC;QAAA,0EACC;QAAA,mEACD;QAAA,4DAAK;QACL,0EACC;QAAA,wDACD;;QAAA,4DAAK;QACN,4DAAK;QACL,sEACC;QAAA,0EACC;QAAA,wDACD;QAAA,4DAAK;QACL,0EACC;QAAA,wDACD;QAAA,4DAAK;QACN,4DAAK;QACN,4DAAQ;QACT,4DAAQ;QACT,4DAAM;QACP,4DAAM;QAEN,4EAA+B;;QAzEmB,0DAA2B;QAA3B,sFAA2B;QAoBrE,2DAAwC;QAAxC,6EAAwC;QAqC1C,2DACD;QADC,8JACD;QAIC,0DACD;QADC,8GACD;QAEC,0DACD;QADC,mHACD;;6FD9DQ,YAAY;cALxB,uDAAS;eAAC;gBACV,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACnC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AACA;AACF;;AAgBtC,MAAM,SAAS;;wFAAT,SAAS,cAFT,2DAAY;4IAEZ,SAAS,mBAHV,EAAE,YANJ;YACR,uEAAa;YACb,oEAAgB;YAChB,4DAAY;YACZ,0DAAW;SACX;mIAIW,SAAS,mBAXpB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,4DAAY;QACZ,0DAAW;6FAKA,SAAS;cAbrB,sDAAQ;eAAC;gBACT,YAAY,EAAE;oBACb,2DAAY;iBACZ;gBACD,OAAO,EAAE;oBACR,uEAAa;oBACb,oEAAgB;oBAChB,4DAAY;oBACZ,0DAAW;iBACX;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aACzB;;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHnB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEV,gBAAgB,uFAFlB,4DAAY;6FAEV,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACT,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACvB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC3B,oEAAc,EAAE,CAAC;CACjB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KACjD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n\tproduction: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export interface IStrategicData {\n\tid: number;\n\tcreditorName: string;\n\tfirstName: FirstName;\n\tlastName: LastName;\n\tminPaymentPercentage: number;\n\tbalance: number;\n\tisChecked: boolean;\n}\n\nexport enum FirstName {\n\tSuman = 'Suman',\n}\n\nexport enum LastName {\n\tTester79 = 'Tester79',\n}\n\nexport class StrategicData implements IStrategicData {\n\tid: number;\n\tcreditorName: string;\n\tfirstName: FirstName;\n\tlastName: LastName;\n\tminPaymentPercentage: number;\n\tbalance: number;\n\tisChecked: boolean;\n}\n","import { Component } from '@angular/core';\nimport { IStrategicData } from './StrategicData';\nimport { StrategicData } from './StrategicData';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\ttitle = 'StrategicTest';\n\tdata: IStrategicData[];\n\ttotal: number;\n\ttotalRowCount: number;\n\ttotalCheckRowCount: number;\n\ttoggleChecked: boolean;\n\n\tasync getStrategicData(): Promise<IStrategicData[]> {\n\t\tconst data = await fetch('https://raw.githubusercontent.com/StrategicFS/Recruitment/master/data.json');\n\t\tconst jsonData = await data.json();\n\n\t\tthis.data = (jsonData as IStrategicData[])\n\t\t\t.map(d => {\n\t\t\t\td.minPaymentPercentage = d.minPaymentPercentage / 100;\n\n\t\t\t\treturn d;\n\t\t\t});\n\n\t\tthis.updateCheckCount();\n\t\tthis.updateTotalRowCount();\n\t\tthis.updateTotalBalance();\n\n\t\treturn this.data;\n\t}\n\n\tngOnInit() {\n\t\tthis.getStrategicData();\n\t}\n\n\tupdateCheckCount() {\n\t\tthis.totalCheckRowCount = this.data.map(d => d.isChecked).reduce((a, b) => a + (b ? 1 : 0), 0);\n\n\t\tthis.toggleChecked = this.totalCheckRowCount === this.totalRowCount;\n\n\t\tthis.updateTotalBalance();\n\t}\n\n\tupdateTotalRowCount() {\n\t\tthis.totalRowCount = this.data.length;\n\t}\n\n\tupdateTotalBalance() {\n\t\tthis.total = this.data.filter(d => d.isChecked).map(d => d.balance).reduce((a, b) => a + b, 0);\n\t}\n\n\tremoveRows() {\n\t\tthis.data = this.data.filter(d => !d.isChecked);\n\t\tthis.updateCheckCount();\n\t\tthis.updateTotalRowCount();\n\t\tthis.updateTotalBalance();\n\t}\n\n\ttoggleAll() {\n\t\tthis.toggleChecked = !this.toggleChecked;\n\t\tthis.data.forEach(d => d.isChecked = this.toggleChecked);\n\n\t\tthis.updateCheckCount();\n\t}\n\n\taddDebt() {\n\t\tconst newRow = new StrategicData();\n\n\t\tnewRow.balance = 0;\n\t\tnewRow.minPaymentPercentage = 0;\n\n\t\tthis.data.push(newRow);\n\t}\n}\n","<div class=\"content\" role=\"main\">\r\n\t<div class=\"padding\">\r\n\t\t<table>\r\n\t\t\t<thead>\r\n\t\t\t\t<td class=\"text-center\">\r\n\t\t\t\t\t<input type=\"checkbox\" (click)=\"toggleAll()\" [(ngModel)]=\"toggleChecked\">\r\n\t\t\t\t</td>\r\n\t\t\t\t<td class=\"header creditor\">\r\n\t\t\t\t\t<div>Creditor</div>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td class=\"header first-name\">\r\n\t\t\t\t\t<div>First Name</div>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td class=\"header last-name\">\r\n\t\t\t\t\t<div>Last Name</div>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td class=\"header min-pay\">\r\n\t\t\t\t\t<div class=\"text-right\">Min</div>\r\n\t\t\t\t\t<div class=\"text-right\">Pay %</div>\r\n\t\t\t\t</td>\r\n\t\t\t\t<td class=\"header balance\">\r\n\t\t\t\t\t<div class=\"text-right\">Balance</div>\r\n\t\t\t\t</td>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr *ngFor=\"let item of data; let i = index\" [ngClass]=\"{'redredred shadow-none': !item.isChecked}\">\r\n\t\t\t\t\t<td class=\"text-center\">\r\n\t\t\t\t\t\t<input class=\"custom-checkbox\" type=\"checkbox\" [(ngModel)]=\"item.isChecked\"\r\n\t\t\t\t\t\t\t(change)=\"updateCheckCount()\" name=\"{{item.id}}-checkbox\">\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input class=\"creditor\" type=\"text\" [(ngModel)]=\"item.creditorName\">\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input class=\"first-name\" type=\"text\" [(ngModel)]=\"item.firstName\">\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input class=\"last-name\" type=\"text\" [(ngModel)]=\"item.lastName\">\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input class=\"min-pay text-right\" type=\"text\"\r\n\t\t\t\t\t\t\t[ngModel]=\"item.minPaymentPercentage | percent:'1.2'\"\r\n\t\t\t\t\t\t\t(ngModelChange)=\"item.minPaymentPercentage = $event\">\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td>\r\n\t\t\t\t\t\t<input class=\"balance text-right\" type=\"text\" [ngModel]=\"item.balance | number:'1.2-2'\"\r\n\t\t\t\t\t\t\t(ngModelChange)=\"item.balance = $event\">\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\t<button (click)=\"addDebt()\" class=\"btn btn-primary debt-button\">Add Debt</button>\r\n\t\t\t\t\t\t<button (click)=\"removeRows()\" class=\"btn btn-primary debt-button\">Remove Debt</button>\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t\t<tfoot class=\"embolden\">\r\n\t\t\t\t<tr class=\"total-row\">\r\n\t\t\t\t\t<td class=\"total-padding\">\r\n\t\t\t\t\t\tTotal\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td colspan=\"5\" class=\"text-right\">\r\n\t\t\t\t\t\t{{ total | currency:'USD' }}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td colspan=\"2\">\r\n\t\t\t\t\t\tTotal Row Count: {{ totalRowCount }}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td colspan=\"5\">\r\n\t\t\t\t\t\tCheck Row Count: {{ totalCheckRowCount }}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tfoot>\r\n\t\t</table>\r\n\t</div>\r\n</div>\r\n\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n\tdeclarations: [\n\t\tAppComponent\n\t],\n\timports: [\n\t\tBrowserModule,\n\t\tAppRoutingModule,\n\t\tRouterModule,\n\t\tFormsModule\n\t],\n\tproviders: [],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n\tenableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n\t.catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}